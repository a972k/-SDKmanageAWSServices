import boto3
import botocore
import time
import os 
from resources import region, source_buket, destination_bucket, sns_topic_name, subscription_email, sns_topic_arn

s3 = boto3.client('s3', region_name=region)
sns = boto3.client('sns', region_name=region)

def create_bucket(bucket_name):
    try:
        s3.create_bucket(
            Bucket=bucket_name,
            CreateBucketConfiguration={'LocationConstraint': region}
        )
        print(f"Created bucket: {bucket_name}")
    except botocore.exceptions.ClientError as e:
        if e.response['Error']['Code'] == 'BucketAlreadyOwnedByYou':
            print(f"Bucket {bucket_name} already exists and is owned by you.")
        else:
            print(f"Failed to create bucket {bucket_name}: {e}")

def create_sns_topic(topic_name):
    response = sns.create_topic(Name=topic_name)
    topic_arn = response['TopicArn']
    print(f"Created SNS topic: {topic_name}")
    return topic_arn

def subscribe_email(topic_arn, email):
    sns.subscribe(
        TopicArn=topic_arn,
        Protocol='email',
        Endpoint=email
    )
    print(f"Subscription request sent to {email}. Please check and confirm.")

def main():
    print("ðŸ”§ Setting up AWS resources...")

    # Create buckets
    create_bucket(source_buket)
    create_bucket(destination_bucket)

    # Create SNS topic
    topic_arn = create_sns_topic(sns_topic_name)

    # Subscribe email
    subscribe_email(topic_arn, subscription_email)

    print("Setup complete.")
    
def write_config_to_file(topic_arn):
    with open('sources.py', 'w') as f:
        f.write(f"""# Auto-generated by setup_resources.py

    region = '{region}'
    source_bucket = '{source_buket}'
    destination_bucket = '{destination_bucket}'

    sns_topic_name = '{sns_topic_name}'
    sns_topic_arn = '{topic_arn}'
    subscription_email = '{subscription_email}'

    source_folder = 'customer-details/'
    prefix = 'sr1_'
    destination_subfolder = 'sr1/'
    """)
        print("Wrote config (incl. prefix) to sources.py")
    

if __name__ == "__main__":
    main()
